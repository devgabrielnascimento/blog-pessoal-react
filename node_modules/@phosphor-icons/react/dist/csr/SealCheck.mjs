var i = Object.defineProperty, p = Object.defineProperties;
var c = Object.getOwnPropertyDescriptors;
var a = Object.getOwnPropertySymbols;
var f = Object.prototype.hasOwnProperty, h = Object.prototype.propertyIsEnumerable;
var m = (r, o, e) => o in r ? i(r, o, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[o] = e, s = (r, o) => {
  for (var e in o || (o = {}))
    f.call(o, e) && m(r, e, o[e]);
  if (a)
    for (var e of a(o))
      h.call(o, e) && m(r, e, o[e]);
  return r;
}, t = (r, o) => p(r, c(o));
import { j as l } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as x } from "react";
import C from "../lib/IconBase.mjs";
import j from "../defs/SealCheck.mjs";
const k = x((r, o) => /* @__PURE__ */ l.jsx(C, t(s({ ref: o }, r), { weights: j })));
k.displayName = "SealCheck";
export {
  k as CircleWavyCheck,
  k as SealCheck
};
