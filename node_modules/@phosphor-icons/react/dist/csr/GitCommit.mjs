var a = Object.defineProperty, e = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var r = Object.getOwnPropertySymbols;
var x = Object.prototype.hasOwnProperty, j = Object.prototype.propertyIsEnumerable;
var i = (m, o, t) => o in m ? a(m, o, { enumerable: !0, configurable: !0, writable: !0, value: t }) : m[o] = t, s = (m, o) => {
  for (var t in o || (o = {}))
    x.call(o, t) && i(m, t, o[t]);
  if (r)
    for (var t of r(o))
      j.call(o, t) && i(m, t, o[t]);
  return m;
}, p = (m, o) => e(m, f(o));
import { j as n } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as c } from "react";
import d from "../lib/IconBase.mjs";
import w from "../defs/GitCommit.mjs";
const C = c((m, o) => /* @__PURE__ */ n.jsx(d, p(s({ ref: o }, m), { weights: w })));
C.displayName = "GitCommit";
export {
  C as GitCommit
};
