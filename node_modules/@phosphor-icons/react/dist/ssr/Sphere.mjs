var i = Object.defineProperty, a = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var m = Object.getOwnPropertySymbols;
var x = Object.prototype.hasOwnProperty, S = Object.prototype.propertyIsEnumerable;
var p = (o, r, e) => r in o ? i(o, r, { enumerable: !0, configurable: !0, writable: !0, value: e }) : o[r] = e, s = (o, r) => {
  for (var e in r || (r = {}))
    x.call(r, e) && p(o, e, r[e]);
  if (m)
    for (var e of m(r))
      S.call(r, e) && p(o, e, r[e]);
  return o;
}, t = (o, r) => a(o, f(r));
import { j as h } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as j } from "react";
import R from "../lib/SSRBase.mjs";
import d from "../defs/Sphere.mjs";
const n = j((o, r) => /* @__PURE__ */ h.jsx(R, t(s({ ref: r }, o), { weights: d })));
n.displayName = "Sphere";
export {
  n as Sphere
};
