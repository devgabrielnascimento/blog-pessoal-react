var p = Object.defineProperty, a = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var s = Object.getOwnPropertySymbols;
var n = Object.prototype.hasOwnProperty, x = Object.prototype.propertyIsEnumerable;
var t = (o, e, r) => e in o ? p(o, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : o[e] = r, m = (o, e) => {
  for (var r in e || (e = {}))
    n.call(e, r) && t(o, r, e[r]);
  if (s)
    for (var r of s(e))
      x.call(e, r) && t(o, r, e[r]);
  return o;
}, i = (o, e) => a(o, f(e));
import { j as S } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as c } from "react";
import j from "../lib/SSRBase.mjs";
import l from "../defs/SelectionInverse.mjs";
const I = c((o, e) => /* @__PURE__ */ S.jsx(j, i(m({ ref: e }, o), { weights: l })));
I.displayName = "SelectionInverse";
export {
  I as SelectionInverse
};
