var p = Object.defineProperty, e = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var m = Object.getOwnPropertySymbols;
var x = Object.prototype.hasOwnProperty, S = Object.prototype.propertyIsEnumerable;
var s = (t, r, o) => r in t ? p(t, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : t[r] = o, a = (t, r) => {
  for (var o in r || (r = {}))
    x.call(r, o) && s(t, o, r[o]);
  if (m)
    for (var o of m(r))
      S.call(r, o) && s(t, o, r[o]);
  return t;
}, i = (t, r) => e(t, f(r));
import { j as c } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as j } from "react";
import u from "../lib/SSRBase.mjs";
import R from "../defs/Subtract.mjs";
const b = j((t, r) => /* @__PURE__ */ c.jsx(u, i(a({ ref: r }, t), { weights: R })));
b.displayName = "Subtract";
export {
  b as Subtract
};
