var p = Object.defineProperty, a = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var e = Object.getOwnPropertySymbols;
var w = Object.prototype.hasOwnProperty, x = Object.prototype.propertyIsEnumerable;
var m = (o, r, s) => r in o ? p(o, r, { enumerable: !0, configurable: !0, writable: !0, value: s }) : o[r] = s, t = (o, r) => {
  for (var s in r || (r = {}))
    w.call(r, s) && m(o, s, r[s]);
  if (e)
    for (var s of e(r))
      x.call(r, s) && m(o, s, r[s]);
  return o;
}, i = (o, r) => a(o, f(r));
import { j as g } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as j } from "react";
import R from "../lib/SSRBase.mjs";
import d from "../defs/ArrowsMerge.mjs";
const n = j((o, r) => /* @__PURE__ */ g.jsx(R, i(t({ ref: r }, o), { weights: d })));
n.displayName = "ArrowsMerge";
export {
  n as ArrowsMerge
};
