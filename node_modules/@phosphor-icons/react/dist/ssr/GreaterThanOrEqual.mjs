var i = Object.defineProperty, p = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var t = Object.getOwnPropertySymbols;
var n = Object.prototype.hasOwnProperty, x = Object.prototype.propertyIsEnumerable;
var e = (a, r, o) => r in a ? i(a, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : a[r] = o, m = (a, r) => {
  for (var o in r || (r = {}))
    n.call(r, o) && e(a, o, r[o]);
  if (t)
    for (var o of t(r))
      x.call(r, o) && e(a, o, r[o]);
  return a;
}, s = (a, r) => p(a, f(r));
import { j as h } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as j } from "react";
import l from "../lib/SSRBase.mjs";
import u from "../defs/GreaterThanOrEqual.mjs";
const E = j((a, r) => /* @__PURE__ */ h.jsx(l, s(m({ ref: r }, a), { weights: u })));
E.displayName = "GreaterThanOrEqual";
export {
  E as GreaterThanOrEqual
};
