var p = Object.defineProperty, a = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var t = Object.getOwnPropertySymbols;
var x = Object.prototype.hasOwnProperty, c = Object.prototype.propertyIsEnumerable;
var m = (o, s, r) => s in o ? p(o, s, { enumerable: !0, configurable: !0, writable: !0, value: r }) : o[s] = r, i = (o, s) => {
  for (var r in s || (s = {}))
    x.call(s, r) && m(o, r, s[r]);
  if (t)
    for (var r of t(s))
      c.call(s, r) && m(o, r, s[r]);
  return o;
}, e = (o, s) => a(o, f(s));
import { j as h } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as j } from "react";
import R from "../lib/SSRBase.mjs";
import d from "../defs/ListChecks.mjs";
const k = j((o, s) => /* @__PURE__ */ h.jsx(R, e(i({ ref: s }, o), { weights: d })));
k.displayName = "ListChecks";
export {
  k as ListChecks
};
