var i = Object.defineProperty, p = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var a = Object.getOwnPropertySymbols;
var c = Object.prototype.hasOwnProperty, h = Object.prototype.propertyIsEnumerable;
var m = (e, r, o) => r in e ? i(e, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[r] = o, s = (e, r) => {
  for (var o in r || (r = {}))
    c.call(r, o) && m(e, o, r[o]);
  if (a)
    for (var o of a(r))
      h.call(r, o) && m(e, o, r[o]);
  return e;
}, t = (e, r) => p(e, f(r));
import { j as l } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as x } from "react";
import C from "../lib/SSRBase.mjs";
import S from "../defs/SealCheck.mjs";
const j = x((e, r) => /* @__PURE__ */ l.jsx(C, t(s({ ref: r }, e), { weights: S })));
j.displayName = "SealCheck";
export {
  j as CircleWavyCheck,
  j as SealCheck
};
