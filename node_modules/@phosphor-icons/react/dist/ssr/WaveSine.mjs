var a = Object.defineProperty, p = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var m = Object.getOwnPropertySymbols;
var n = Object.prototype.hasOwnProperty, x = Object.prototype.propertyIsEnumerable;
var i = (r, o, e) => o in r ? a(r, o, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[o] = e, s = (r, o) => {
  for (var e in o || (o = {}))
    n.call(o, e) && i(r, e, o[e]);
  if (m)
    for (var e of m(o))
      x.call(o, e) && i(r, e, o[e]);
  return r;
}, t = (r, o) => p(r, f(o));
import { j as S } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as j } from "react";
import R from "../lib/SSRBase.mjs";
import d from "../defs/WaveSine.mjs";
const v = j((r, o) => /* @__PURE__ */ S.jsx(R, t(s({ ref: o }, r), { weights: d })));
v.displayName = "WaveSine";
export {
  v as WaveSine
};
