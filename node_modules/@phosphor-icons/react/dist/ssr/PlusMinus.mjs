var a = Object.defineProperty, e = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var m = Object.getOwnPropertySymbols;
var u = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
var i = (o, s, r) => s in o ? a(o, s, { enumerable: !0, configurable: !0, writable: !0, value: r }) : o[s] = r, t = (o, s) => {
  for (var r in s || (s = {}))
    u.call(s, r) && i(o, r, s[r]);
  if (m)
    for (var r of m(s))
      n.call(s, r) && i(o, r, s[r]);
  return o;
}, p = (o, s) => e(o, f(s));
import { j as x } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as j } from "react";
import l from "../lib/SSRBase.mjs";
import R from "../defs/PlusMinus.mjs";
const d = j((o, s) => /* @__PURE__ */ x.jsx(l, p(t({ ref: s }, o), { weights: R })));
d.displayName = "PlusMinus";
export {
  d as PlusMinus
};
