var p = Object.defineProperty, a = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var s = Object.getOwnPropertySymbols;
var l = Object.prototype.hasOwnProperty, u = Object.prototype.propertyIsEnumerable;
var e = (o, t, r) => t in o ? p(o, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : o[t] = r, m = (o, t) => {
  for (var r in t || (t = {}))
    l.call(t, r) && e(o, r, t[r]);
  if (s)
    for (var r of s(t))
      u.call(t, r) && e(o, r, t[r]);
  return o;
}, i = (o, t) => a(o, f(t));
import { j as R } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as x } from "react";
import j from "../lib/SSRBase.mjs";
import d from "../defs/GitPullRequest.mjs";
const n = x((o, t) => /* @__PURE__ */ R.jsx(j, i(m({ ref: t }, o), { weights: d })));
n.displayName = "GitPullRequest";
export {
  n as GitPullRequest
};
