var i = Object.defineProperty, p = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var e = Object.getOwnPropertySymbols;
var x = Object.prototype.hasOwnProperty, j = Object.prototype.propertyIsEnumerable;
var s = (m, r, o) => r in m ? i(m, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : m[r] = o, t = (m, r) => {
  for (var o in r || (r = {}))
    x.call(r, o) && s(m, o, r[o]);
  if (e)
    for (var o of e(r))
      j.call(r, o) && s(m, o, r[o]);
  return m;
}, a = (m, r) => p(m, f(r));
import { j as l } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as R } from "react";
import d from "../lib/SSRBase.mjs";
import n from "../defs/TreePalm.mjs";
const w = R((m, r) => /* @__PURE__ */ l.jsx(d, a(t({ ref: r }, m), { weights: n })));
w.displayName = "TreePalm";
export {
  w as TreePalm
};
