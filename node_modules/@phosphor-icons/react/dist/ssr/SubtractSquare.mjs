var i = Object.defineProperty, p = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var a = Object.getOwnPropertySymbols;
var S = Object.prototype.hasOwnProperty, u = Object.prototype.propertyIsEnumerable;
var m = (t, r, o) => r in t ? i(t, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : t[r] = o, s = (t, r) => {
  for (var o in r || (r = {}))
    S.call(r, o) && m(t, o, r[o]);
  if (a)
    for (var o of a(r))
      u.call(r, o) && m(t, o, r[o]);
  return t;
}, e = (t, r) => p(t, f(r));
import { j as x } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as c } from "react";
import j from "../lib/SSRBase.mjs";
import R from "../defs/SubtractSquare.mjs";
const b = c((t, r) => /* @__PURE__ */ x.jsx(j, e(s({ ref: r }, t), { weights: R })));
b.displayName = "SubtractSquare";
export {
  b as SubtractSquare
};
