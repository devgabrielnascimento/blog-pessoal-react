var e = Object.defineProperty, f = Object.defineProperties;
var n = Object.getOwnPropertyDescriptors;
var t = Object.getOwnPropertySymbols;
var p = Object.prototype.hasOwnProperty, x = Object.prototype.propertyIsEnumerable;
var m = (o, i, r) => i in o ? e(o, i, { enumerable: !0, configurable: !0, writable: !0, value: r }) : o[i] = r, s = (o, i) => {
  for (var r in i || (i = {}))
    p.call(i, r) && m(o, r, i[r]);
  if (t)
    for (var r of t(i))
      x.call(i, r) && m(o, r, i[r]);
  return o;
}, a = (o, i) => f(o, n(i));
import { j } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as y } from "react";
import I from "../lib/SSRBase.mjs";
import R from "../defs/Infinity.mjs";
const c = y((o, i) => /* @__PURE__ */ j.jsx(I, a(s({ ref: i }, o), { weights: R })));
c.displayName = "Infinity";
export {
  c as Infinity,
  c as Lemniscate
};
