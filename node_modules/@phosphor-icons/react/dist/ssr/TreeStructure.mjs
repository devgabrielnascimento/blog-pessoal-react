var p = Object.defineProperty, a = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var o = Object.getOwnPropertySymbols;
var u = Object.prototype.hasOwnProperty, x = Object.prototype.propertyIsEnumerable;
var m = (t, r, e) => r in t ? p(t, r, { enumerable: !0, configurable: !0, writable: !0, value: e }) : t[r] = e, s = (t, r) => {
  for (var e in r || (r = {}))
    u.call(r, e) && m(t, e, r[e]);
  if (o)
    for (var e of o(r))
      x.call(r, e) && m(t, e, r[e]);
  return t;
}, i = (t, r) => a(t, f(r));
import { j as S } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as c } from "react";
import j from "../lib/SSRBase.mjs";
import R from "../defs/TreeStructure.mjs";
const d = c((t, r) => /* @__PURE__ */ S.jsx(j, i(s({ ref: r }, t), { weights: R })));
d.displayName = "TreeStructure";
export {
  d as TreeStructure
};
