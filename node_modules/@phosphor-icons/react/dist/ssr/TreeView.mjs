var p = Object.defineProperty, a = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var m = Object.getOwnPropertySymbols;
var w = Object.prototype.hasOwnProperty, x = Object.prototype.propertyIsEnumerable;
var i = (e, r, o) => r in e ? p(e, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[r] = o, s = (e, r) => {
  for (var o in r || (r = {}))
    w.call(r, o) && i(e, o, r[o]);
  if (m)
    for (var o of m(r))
      x.call(r, o) && i(e, o, r[o]);
  return e;
}, t = (e, r) => a(e, f(r));
import { j } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as R } from "react";
import d from "../lib/SSRBase.mjs";
import n from "../defs/TreeView.mjs";
const S = R((e, r) => /* @__PURE__ */ j.jsx(d, t(s({ ref: r }, e), { weights: n })));
S.displayName = "TreeView";
export {
  S as TreeView
};
