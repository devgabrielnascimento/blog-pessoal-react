var t = Object.defineProperty, a = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var m = Object.getOwnPropertySymbols;
var n = Object.prototype.hasOwnProperty, l = Object.prototype.propertyIsEnumerable;
var r = (o, e, p) => e in o ? t(o, e, { enumerable: !0, configurable: !0, writable: !0, value: p }) : o[e] = p, i = (o, e) => {
  for (var p in e || (e = {}))
    n.call(e, p) && r(o, p, e[p]);
  if (m)
    for (var p of m(e))
      l.call(e, p) && r(o, p, e[p]);
  return o;
}, s = (o, e) => a(o, f(e));
import { j as x } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as S } from "react";
import j from "../lib/SSRBase.mjs";
import E from "../defs/EnvelopeSimpleOpen.mjs";
const R = S((o, e) => /* @__PURE__ */ x.jsx(j, s(i({ ref: e }, o), { weights: E })));
R.displayName = "EnvelopeSimpleOpen";
export {
  R as EnvelopeSimpleOpen
};
