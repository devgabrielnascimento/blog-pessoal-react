var s = Object.defineProperty, t = Object.defineProperties;
var a = Object.getOwnPropertyDescriptors;
var e = Object.getOwnPropertySymbols;
var S = Object.prototype.hasOwnProperty, l = Object.prototype.propertyIsEnumerable;
var f = (o, m, r) => m in o ? s(o, m, { enumerable: !0, configurable: !0, writable: !0, value: r }) : o[m] = r, i = (o, m) => {
  for (var r in m || (m = {}))
    S.call(m, r) && f(o, r, m[r]);
  if (e)
    for (var r of e(m))
      l.call(m, r) && f(o, r, m[r]);
  return o;
}, p = (o, m) => t(o, a(m));
import { j as x } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as h } from "react";
import j from "../lib/SSRBase.mjs";
import u from "../defs/ShuffleSimple.mjs";
const R = h((o, m) => /* @__PURE__ */ x.jsx(j, p(i({ ref: m }, o), { weights: u })));
R.displayName = "ShuffleSimple";
export {
  R as ShuffleSimple
};
