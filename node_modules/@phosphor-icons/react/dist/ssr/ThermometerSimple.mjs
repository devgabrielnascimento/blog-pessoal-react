var s = Object.defineProperty, a = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var o = Object.getOwnPropertySymbols;
var x = Object.prototype.hasOwnProperty, S = Object.prototype.propertyIsEnumerable;
var t = (r, m, e) => m in r ? s(r, m, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[m] = e, i = (r, m) => {
  for (var e in m || (m = {}))
    x.call(m, e) && t(r, e, m[e]);
  if (o)
    for (var e of o(m))
      S.call(m, e) && t(r, e, m[e]);
  return r;
}, p = (r, m) => a(r, f(m));
import { j as h } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as j } from "react";
import l from "../lib/SSRBase.mjs";
import R from "../defs/ThermometerSimple.mjs";
const d = j((r, m) => /* @__PURE__ */ h.jsx(l, p(i({ ref: m }, r), { weights: R })));
d.displayName = "ThermometerSimple";
export {
  d as ThermometerSimple
};
