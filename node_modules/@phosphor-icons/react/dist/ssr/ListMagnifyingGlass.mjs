var f = Object.defineProperty, p = Object.defineProperties;
var e = Object.getOwnPropertyDescriptors;
var r = Object.getOwnPropertySymbols;
var n = Object.prototype.hasOwnProperty, g = Object.prototype.propertyIsEnumerable;
var t = (i, s, o) => s in i ? f(i, s, { enumerable: !0, configurable: !0, writable: !0, value: o }) : i[s] = o, a = (i, s) => {
  for (var o in s || (s = {}))
    n.call(s, o) && t(i, o, s[o]);
  if (r)
    for (var o of r(s))
      g.call(s, o) && t(i, o, s[o]);
  return i;
}, m = (i, s) => p(i, e(s));
import { j as x } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as j } from "react";
import l from "../lib/SSRBase.mjs";
import y from "../defs/ListMagnifyingGlass.mjs";
const R = j((i, s) => /* @__PURE__ */ x.jsx(l, m(a({ ref: s }, i), { weights: y })));
R.displayName = "ListMagnifyingGlass";
export {
  R as ListMagnifyingGlass
};
