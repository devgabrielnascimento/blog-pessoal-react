var i = Object.defineProperty, p = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var a = Object.getOwnPropertySymbols;
var l = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
var m = (o, r, t) => r in o ? i(o, r, { enumerable: !0, configurable: !0, writable: !0, value: t }) : o[r] = t, s = (o, r) => {
  for (var t in r || (r = {}))
    l.call(r, t) && m(o, t, r[t]);
  if (a)
    for (var t of a(r))
      n.call(r, t) && m(o, t, r[t]);
  return o;
}, e = (o, r) => p(o, f(r));
import { j as x } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as c } from "react";
import j from "../lib/SSRBase.mjs";
import u from "../defs/NuclearPlant.mjs";
const N = c((o, r) => /* @__PURE__ */ x.jsx(j, e(s({ ref: r }, o), { weights: u })));
N.displayName = "NuclearPlant";
export {
  N as NuclearPlant
};
