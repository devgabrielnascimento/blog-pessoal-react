var E = Object.defineProperty, M = Object.defineProperties;
var N = Object.getOwnPropertyDescriptors;
var n = Object.getOwnPropertySymbols;
var f = Object.prototype.hasOwnProperty, h = Object.prototype.propertyIsEnumerable;
var d = (t, o, r) => o in t ? E(t, o, { enumerable: !0, configurable: !0, writable: !0, value: r }) : t[o] = r, c = (t, o) => {
  for (var r in o || (o = {}))
    f.call(o, r) && d(t, r, o[r]);
  if (n)
    for (var r of n(o))
      h.call(o, r) && d(t, r, o[r]);
  return t;
}, g = (t, o) => M(t, N(o));
var l = (t, o) => {
  var r = {};
  for (var e in t)
    f.call(t, e) && o.indexOf(e) < 0 && (r[e] = t[e]);
  if (t != null && n)
    for (var e of n(t))
      o.indexOf(e) < 0 && h.call(t, e) && (r[e] = t[e]);
  return r;
};
import { j as p } from "../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.mjs";
import { forwardRef as P, useContext as S } from "react";
import { IconContext as W } from "./context.mjs";
const w = P((t, o) => {
  const x = t, {
    alt: r,
    color: e,
    size: s,
    weight: i,
    mirrored: u,
    children: C,
    weights: j
  } = x, v = l(x, [
    "alt",
    "color",
    "size",
    "weight",
    "mirrored",
    "children",
    "weights"
  ]), m = S(W), {
    color: B = "currentColor",
    size: a,
    weight: I = "regular",
    mirrored: R = !1
  } = m, y = l(m, [
    "color",
    "size",
    "weight",
    "mirrored"
  ]);
  return /* @__PURE__ */ p.jsxs(
    "svg",
    g(c(c({
      ref: o,
      xmlns: "http://www.w3.org/2000/svg",
      width: s != null ? s : a,
      height: s != null ? s : a,
      fill: e != null ? e : B,
      viewBox: "0 0 256 256",
      transform: u || R ? "scale(-1, 1)" : void 0
    }, y), v), {
      children: [
        !!r && /* @__PURE__ */ p.jsx("title", { children: r }),
        C,
        j.get(i != null ? i : I)
      ]
    })
  );
});
w.displayName = "IconBase";
const A = w;
export {
  A as default
};
